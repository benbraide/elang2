#pragma once

#ifndef ELANG_BYTE_CODE_ID_H
#define ELANG_BYTE_CODE_ID_H

namespace elang::byte_code{
	enum class id : unsigned char{
		nop,
		pushb,
		pushbi,
		pushw,
		pushwi,
		pushd,
		pushdi,
		pushq,
		pushqi,
		pushf,
		pushfi,
		popb,
		popw,
		popd,
		popq,
		popf,
		movb,
		movbi,
		movw,
		movwi,
		movd,
		movdi,
		movq,
		movqi,
		movf,
		movfi,
		lea,
		syscall,
		call,
		ret,
		jmp,
		jz,
		jnz,
		je,
		jne,
		jl,
		jnl,
		jle,
		jnle,
		jg,
		jng,
		jge,
		jnge,
		loop,
		incb,
		incw,
		incd,
		incq,
		decb,
		decw,
		decd,
		decq,
		addb,
		addbi,
		addw,
		addwi,
		addd,
		adddi,
		addq,
		addqi,
		addf,
		addfi,
		subb,
		subbi,
		subw,
		subwi,
		subd,
		subdi,
		subq,
		subqi,
		subf,
		subfi,
		multb,
		multbi,
		multw,
		multwi,
		multd,
		multdi,
		multq,
		multqi,
		multf,
		multfi,
		divb,
		divbi,
		divw,
		divwi,
		divd,
		divdi,
		divq,
		divqi,
		divf,
		divfi,
		modb,
		modbi,
		modw,
		modwi,
		modd,
		moddi,
		modq,
		modqi,
		andb,
		andbi,
		andw,
		andwi,
		andd,
		anddi,
		andq,
		andqi,
		xorb,
		xorw,
		xord,
		xorq,
		xorbi,
		xorwi,
		xordi,
		xorqi,
		orb,
		orw,
		ord,
		orq,
		orbi,
		orwi,
		ordi,
		orqi,
		salb,
		salw,
		sald,
		salq,
		salbi,
		salwi,
		saldi,
		salqi,
		sarb,
		sarw,
		sard,
		sarq,
		sarbi,
		sarwi,
		sardi,
		sarqi,
		testb,
		testw,
		testd,
		testq,
		testbi,
		testwi,
		testdi,
		testqi,
		notb,
		notw,
		notd,
		notq,
		notbi,
		notwi,
		notdi,
		notqi,
		cmpb,
		cmpw,
		cmpd,
		cmpq,
		cmpbi,
		cmpwi,
		cmpdi,
		cmpqi,
		db,
		dw,
		dd,
		dq,
		df,
	};
}

#endif /* !ELANG_BYTE_CODE_ID_H */
